
import tkinter as tk
from tkinter import messagebox
from tkinter import ttk


# Main conversion functions

def mps_to_kmph(mps): # Function "m/s to km/h"

    if mps < 0: # Checks the value
        messagebox.showerror("Error", "Value of speed must be a positive number.")
        return
    
    else:
        kmph = mps * 3.6
        kmph = round(kmph, 1)
        return kmph
    
def mps_to_mileph(mps): # Function "m/s to mile/h"

    if mps < 0: # Checks the value
        messagebox.showerror("Error", "Value of speed must be a positive number.")
        return
    
    else:
        mileph = mps * 2.237
        mileph = round(mileph, 1)
        return mileph
    
def kmph_to_mps(kmph):

    if kmph < 0:
        messagebox.showerror("Error", "Value of speed must be a positive number.")
        return
    
    else:
        mps = kmph / 3.6
        mps = round(mps, 1)
        return mps
    
def kmph_to_mileph(kmph):

    if kmph < 0:
        messagebox.showerror("Error", "Value of speed must be a positive number.")
        return
    
    else:
        mileph = kmph / 1.609
        mileph = round(mileph, 1)
        return mileph
    
def mileph_to_mps(mileph):

    if mileph < 0:
        messagebox.showerror("Error", "Value of speed must be a positive number.")
        return
    
    else:
        mps = mileph / 2.237
        mps = round(mps, 1)
        return mps
    
def mileph_to_kmph(mileph):

    if mileph < 0:
        messagebox.showerror("Error", "Value of speed must be a positive number.")
        return
    
    else:
        kmph = mileph * 1.609
        kmph = round(kmph, 1)
        return kmph


# Functions that connect the main functions with an interface

def convert_speed_mps_to_kmph(event=None):
    if mps_to_kmph_entry.get() == "": # If entry is empty (no value given)
        messagebox.showerror("Error", "Please enter a speed value")
        return
    try:
        mps_value = float(mps_to_kmph_entry.get())
        result = mps_to_kmph(mps_value)
        mps_to_kmph_result_label.config(text=result)
    
    except ValueError:
        messagebox.showerror("Error", "Value of speed must be a positive number.")

def convert_speed_mps_to_mileph(event=None):
    if mps_to_mileph_entry.get() == "": # If entry is empty (no value given) 
        messagebox.showerror("Error", "Please enter a speed value")
        return
    try:
        mps_value = float(mps_to_mileph_entry.get())
        result = mps_to_mileph(mps_value)
        mps_to_mileph_result_label.config(text=result)

    except ValueError:
        messagebox.showerror("Error", "Value of speed must be a positive number.")

def convert_speed_kmph_to_mps(event=None):
    if kmph_to_mps_entry.get() == "": # If entry is empty (no value given) 
        messagebox.showerror("Error", "Please enter a speed value")
        return
    try:
        kmph_value = float(kmph_to_mps_entry.get())
        result = kmph_to_mps(kmph_value)
        kmph_to_mps_result_label.config(text=result)

    except ValueError:
        messagebox.showerror("Error", "Value of speed must be a positive number.")

def convert_speed_kmph_to_mileph(event=None):
    if kmph_to_mileph_entry.get() == "": # If entry is empty (no value given) 
        messagebox.showerror("Error", "Please enter a speed value")
        return
    try:
        kmph_value = float(kmph_to_mileph_entry.get())
        result = kmph_to_mileph(kmph_value)
        kmph_to_mileph_result_label.config(text=result)

    except ValueError:
        messagebox.showerror("Error", "Value of speed must be a positive number.")

def convert_speed_mileph_to_mps(event=None):
    if mileph_to_mps_entry.get() == "": # If entry is empty (no value given) 
        messagebox.showerror("Error", "Please enter a speed value")
        return
    try:
        mileph_value = float(mileph_to_mps_entry.get())
        result = mileph_to_mps(mileph_value)
        mileph_to_mps_result_label.config(text=result)

    except ValueError:
        messagebox.showerror("Error", "Value of speed must be a positive number.")

def convert_speed_mileph_to_kmph(event=None):
    if mileph_to_kmph_entry.get() == "": # If entry is empty (no value given) 
        messagebox.showerror("Error", "Please enter a speed value")
        return
    try:
        mileph_value = float(mileph_to_kmph_entry.get())
        result = mileph_to_kmph(mileph_value)
        mileph_to_kmph_result_label.config(text=result)

    except ValueError:
        messagebox.showerror("Error", "Value of speed must be a positive number.")



def create_window(): # Function that creates a window


    # Visual characteristics

    root = tk.Tk()
    root.title("Speed converter")
    root.geometry("700x500")
    root.configure(bg='#808080')  # Background color for the window


    # Creating the tabs

    notebook = ttk.Notebook(root)
    style = ttk.Style()

    style.configure("TNotebook", background="#C0C0C0")  # Set the background color of the notebook
    style.configure("TNotebook.Tab", background='white', padding=[15, 9], font=("Arial", 12))  # Set the tab button color
    style.configure("TFrame", background="#C0C0C0")  # Set the background color of the page
    style.map("TNotebook.Tab", background=[("selected", "black")])

    notebook.pack(expand=True, fill='both')



    # "m/s to km/h" tab

    mps_to_kmph_tab = ttk.Frame(notebook)
    notebook.add(mps_to_kmph_tab, text="m/s to km/h")
    mps_to_kmph_tab.configure(style="TFrame")

    mps_to_kmph_label = tk.Label(mps_to_kmph_tab, text="Enter the speed value in m/s", font=("Arial", 16), bg="#C0C0C0")
    mps_to_kmph_label.pack(pady=20)

    global mps_to_kmph_entry
    mps_to_kmph_entry = tk.Entry(mps_to_kmph_tab, font=("Arial", 20), bg="white", width=20, justify='center')
    mps_to_kmph_entry.pack(pady=10)

    mps_to_kmph_convert_button = tk.Button(mps_to_kmph_tab, text="Convert to km/h", font=("Arial", 16), bg="#C0C0C0", command=convert_speed_mps_to_kmph)
    mps_to_kmph_convert_button.pack(pady=20)

    global mps_to_kmph_result_label
    mps_to_kmph_result_label = tk.Label(mps_to_kmph_tab, font=("Arial", 20), bg="white", width=20)
    mps_to_kmph_result_label.pack(pady=20)


    # "m/s to mile/h" tab

    mps_to_mileph_tab = ttk.Frame(notebook)
    notebook.add(mps_to_mileph_tab, text="m/s to mi/h")
    mps_to_mileph_tab.configure(style="TFrame")

    mps_to_mileph_label = tk.Label(mps_to_mileph_tab, text="Enter the speed value in m/s", font=("Arial", 16), bg="#C0C0C0")
    mps_to_mileph_label.pack(pady=20)

    global mps_to_mileph_entry
    mps_to_mileph_entry = tk.Entry(mps_to_mileph_tab, font=("Arial", 20), bg="white", width=20, justify='center')
    mps_to_mileph_entry.pack(pady=10)

    mps_to_mileph_convert_button = tk.Button(mps_to_mileph_tab, text="Convert to mi/h", font=("Arial", 16), bg="#C0C0C0", command=convert_speed_mps_to_mileph)
    mps_to_mileph_convert_button.pack(pady=20)

    global mps_to_mileph_result_label
    mps_to_mileph_result_label = tk.Label(mps_to_mileph_tab, font=("Arial", 20), bg="white", width=20)
    mps_to_mileph_result_label.pack(pady=20)


    # "km/h to m/s" tab

    kmph_to_mps_tab = ttk.Frame(notebook)
    notebook.add(kmph_to_mps_tab, text="km/h to m/s")
    kmph_to_mps_tab.configure(style="TFrame")

    kmph_to_mps_label = tk.Label(kmph_to_mps_tab, text="Enter the speed value in km/h", font=("Arial", 16), bg="#C0C0C0")
    kmph_to_mps_label.pack(pady=20)

    global kmph_to_mps_entry
    kmph_to_mps_entry = tk.Entry(kmph_to_mps_tab, font=("Arial", 20), bg="white", width=20, justify='center')
    kmph_to_mps_entry.pack(pady=10)

    kmph_to_mps_convert_button = tk.Button(kmph_to_mps_tab, text="Convert to m/s", font=("Arial", 16), bg="#C0C0C0", command=convert_speed_kmph_to_mps)
    kmph_to_mps_convert_button.pack(pady=20)

    global kmph_to_mps_result_label
    kmph_to_mps_result_label = tk.Label(kmph_to_mps_tab, font=("Arial", 20), bg="white", width=20)
    kmph_to_mps_result_label.pack(pady=20)


    # "km/h to mile/h" tab

    kmph_to_mileph_tab = ttk.Frame(notebook)
    notebook.add(kmph_to_mileph_tab, text="km/h to mi/h")
    kmph_to_mileph_tab.configure(style="TFrame")

    kmph_to_mileph_label = tk.Label(kmph_to_mileph_tab, text="Enter the speed value in km/h", font=("Arial", 16), bg="#C0C0C0")
    kmph_to_mileph_label.pack(pady=20)

    global kmph_to_mileph_entry
    kmph_to_mileph_entry = tk.Entry(kmph_to_mileph_tab, font=("Arial", 20), bg="white", width=20, justify='center')
    kmph_to_mileph_entry.pack(pady=10)

    kmph_to_mileph_convert_button = tk.Button(kmph_to_mileph_tab, text="Convert to mi/h", font=("Arial", 16), bg="#C0C0C0", command=convert_speed_kmph_to_mileph)
    kmph_to_mileph_convert_button.pack(pady=20)

    global kmph_to_mileph_result_label
    kmph_to_mileph_result_label = tk.Label(kmph_to_mileph_tab, font=("Arial", 20), bg="white", width=20)
    kmph_to_mileph_result_label.pack(pady=20)


    # "mi/h to m/s" tab

    mileph_to_mps_tab = ttk.Frame(notebook)
    notebook.add(mileph_to_mps_tab, text="mi/h to m/s")
    mileph_to_mps_tab.configure(style="TFrame")

    mileph_to_mps_label = tk.Label(mileph_to_mps_tab, text="Enter the speed value in mi/h", font=("Arial", 16), bg="#C0C0C0")
    mileph_to_mps_label.pack(pady=20)

    global mileph_to_mps_entry
    mileph_to_mps_entry = tk.Entry(mileph_to_mps_tab, font=("Arial", 20), bg="white", width=20, justify='center')
    mileph_to_mps_entry.pack(pady=10)

    mileph_to_mps_convert_button = tk.Button(mileph_to_mps_tab, text="Convert to m/s", font=("Arial", 16), bg="#C0C0C0", command=convert_speed_mileph_to_mps)
    mileph_to_mps_convert_button.pack(pady=20)

    global mileph_to_mps_result_label
    mileph_to_mps_result_label = tk.Label(mileph_to_mps_tab, font=("Arial", 20), bg="white", width=20)
    mileph_to_mps_result_label.pack(pady=20)


    # "mi/h to km/h" tab

    mileph_to_kmph_tab = ttk.Frame(notebook)
    notebook.add(mileph_to_kmph_tab, text="mi/h to km/h")
    mileph_to_kmph_tab.configure(style="TFrame")

    mileph_to_kmph_label = tk.Label(mileph_to_kmph_tab, text="Enter the speed value in mi/h", font=("Arial", 16), bg="#C0C0C0")
    mileph_to_kmph_label.pack(pady=20)

    global mileph_to_kmph_entry
    mileph_to_kmph_entry = tk.Entry(mileph_to_kmph_tab, font=("Arial", 20), bg="white", width=20, justify='center')
    mileph_to_kmph_entry.pack(pady=10)

    mileph_to_kmph_convert_button = tk.Button(mileph_to_kmph_tab, text="Convert to km/h", font=("Arial", 16), bg="#C0C0C0", command=convert_speed_mileph_to_kmph)
    mileph_to_kmph_convert_button.pack(pady=20)

    global mileph_to_kmph_result_label
    mileph_to_kmph_result_label = tk.Label(mileph_to_kmph_tab, font=("Arial", 20), bg="white", width=20)
    mileph_to_kmph_result_label.pack(pady=20)



    # Binding the "Enter" button

    mps_to_kmph_entry.bind("<Return>", convert_speed_mps_to_kmph)
    mps_to_mileph_entry.bind("<Return>", convert_speed_mps_to_mileph)

    kmph_to_mps_entry.bind("<Return>", convert_speed_kmph_to_mps)
    kmph_to_mileph_entry.bind("<Return>", convert_speed_kmph_to_mileph)

    mileph_to_mps_entry.bind("<Return>", convert_speed_mileph_to_mps)
    mileph_to_kmph_entry.bind("<Return>", convert_speed_mileph_to_kmph)



    root.mainloop()

if __name__ == "__main__":
    create_window()
